// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera.proto

package com.is.vision;

public final class Camera {
  private Camera() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code is.vision.CameraConfigFields}
   */
  public enum CameraConfigFields
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALL = 0;</code>
     */
    ALL(0),
    /**
     * <code>SAMPLING_SETTINGS = 1;</code>
     */
    SAMPLING_SETTINGS(1),
    /**
     * <code>IMAGE_SETTINGS = 2;</code>
     */
    IMAGE_SETTINGS(2),
    /**
     * <code>CAMERA_SETTINGS = 3;</code>
     */
    CAMERA_SETTINGS(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ALL = 0;</code>
     */
    public static final int ALL_VALUE = 0;
    /**
     * <code>SAMPLING_SETTINGS = 1;</code>
     */
    public static final int SAMPLING_SETTINGS_VALUE = 1;
    /**
     * <code>IMAGE_SETTINGS = 2;</code>
     */
    public static final int IMAGE_SETTINGS_VALUE = 2;
    /**
     * <code>CAMERA_SETTINGS = 3;</code>
     */
    public static final int CAMERA_SETTINGS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CameraConfigFields valueOf(int value) {
      return forNumber(value);
    }

    public static CameraConfigFields forNumber(int value) {
      switch (value) {
        case 0: return ALL;
        case 1: return SAMPLING_SETTINGS;
        case 2: return IMAGE_SETTINGS;
        case 3: return CAMERA_SETTINGS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CameraConfigFields>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CameraConfigFields> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraConfigFields>() {
            public CameraConfigFields findValueByNumber(int number) {
              return CameraConfigFields.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.is.vision.Camera.getDescriptor().getEnumTypes().get(0);
    }

    private static final CameraConfigFields[] VALUES = values();

    public static CameraConfigFields valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CameraConfigFields(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:is.vision.CameraConfigFields)
  }

  public interface CameraSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:is.vision.CameraSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * True if the camera should automatically assign this parameter
     * </pre>
     *
     * <code>bool automatic = 1;</code>
     */
    boolean getAutomatic();

    /**
     * <pre>
     * Ratio assigned to the parameter where 0.0 is the lowest value and 1.0 the highest
     * </pre>
     *
     * <code>float ratio = 2;</code>
     */
    float getRatio();
  }
  /**
   * Protobuf type {@code is.vision.CameraSetting}
   */
  public  static final class CameraSetting extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:is.vision.CameraSetting)
      CameraSettingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraSetting.newBuilder() to construct.
    private CameraSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraSetting() {
      automatic_ = false;
      ratio_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              automatic_ = input.readBool();
              break;
            }
            case 21: {

              ratio_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.is.vision.Camera.internal_static_is_vision_CameraSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.is.vision.Camera.internal_static_is_vision_CameraSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.is.vision.Camera.CameraSetting.class, com.is.vision.Camera.CameraSetting.Builder.class);
    }

    public static final int AUTOMATIC_FIELD_NUMBER = 1;
    private boolean automatic_;
    /**
     * <pre>
     * True if the camera should automatically assign this parameter
     * </pre>
     *
     * <code>bool automatic = 1;</code>
     */
    public boolean getAutomatic() {
      return automatic_;
    }

    public static final int RATIO_FIELD_NUMBER = 2;
    private float ratio_;
    /**
     * <pre>
     * Ratio assigned to the parameter where 0.0 is the lowest value and 1.0 the highest
     * </pre>
     *
     * <code>float ratio = 2;</code>
     */
    public float getRatio() {
      return ratio_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (automatic_ != false) {
        output.writeBool(1, automatic_);
      }
      if (ratio_ != 0F) {
        output.writeFloat(2, ratio_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (automatic_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, automatic_);
      }
      if (ratio_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, ratio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.is.vision.Camera.CameraSetting)) {
        return super.equals(obj);
      }
      com.is.vision.Camera.CameraSetting other = (com.is.vision.Camera.CameraSetting) obj;

      boolean result = true;
      result = result && (getAutomatic()
          == other.getAutomatic());
      result = result && (
          java.lang.Float.floatToIntBits(getRatio())
          == java.lang.Float.floatToIntBits(
              other.getRatio()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTOMATIC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAutomatic());
      hash = (37 * hash) + RATIO_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRatio());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.is.vision.Camera.CameraSetting parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.is.vision.Camera.CameraSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code is.vision.CameraSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:is.vision.CameraSetting)
        com.is.vision.Camera.CameraSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.is.vision.Camera.CameraSetting.class, com.is.vision.Camera.CameraSetting.Builder.class);
      }

      // Construct using com.is.vision.Camera.CameraSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        automatic_ = false;

        ratio_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSetting_descriptor;
      }

      public com.is.vision.Camera.CameraSetting getDefaultInstanceForType() {
        return com.is.vision.Camera.CameraSetting.getDefaultInstance();
      }

      public com.is.vision.Camera.CameraSetting build() {
        com.is.vision.Camera.CameraSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.is.vision.Camera.CameraSetting buildPartial() {
        com.is.vision.Camera.CameraSetting result = new com.is.vision.Camera.CameraSetting(this);
        result.automatic_ = automatic_;
        result.ratio_ = ratio_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.is.vision.Camera.CameraSetting) {
          return mergeFrom((com.is.vision.Camera.CameraSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.is.vision.Camera.CameraSetting other) {
        if (other == com.is.vision.Camera.CameraSetting.getDefaultInstance()) return this;
        if (other.getAutomatic() != false) {
          setAutomatic(other.getAutomatic());
        }
        if (other.getRatio() != 0F) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.is.vision.Camera.CameraSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.is.vision.Camera.CameraSetting) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean automatic_ ;
      /**
       * <pre>
       * True if the camera should automatically assign this parameter
       * </pre>
       *
       * <code>bool automatic = 1;</code>
       */
      public boolean getAutomatic() {
        return automatic_;
      }
      /**
       * <pre>
       * True if the camera should automatically assign this parameter
       * </pre>
       *
       * <code>bool automatic = 1;</code>
       */
      public Builder setAutomatic(boolean value) {
        
        automatic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if the camera should automatically assign this parameter
       * </pre>
       *
       * <code>bool automatic = 1;</code>
       */
      public Builder clearAutomatic() {
        
        automatic_ = false;
        onChanged();
        return this;
      }

      private float ratio_ ;
      /**
       * <pre>
       * Ratio assigned to the parameter where 0.0 is the lowest value and 1.0 the highest
       * </pre>
       *
       * <code>float ratio = 2;</code>
       */
      public float getRatio() {
        return ratio_;
      }
      /**
       * <pre>
       * Ratio assigned to the parameter where 0.0 is the lowest value and 1.0 the highest
       * </pre>
       *
       * <code>float ratio = 2;</code>
       */
      public Builder setRatio(float value) {
        
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ratio assigned to the parameter where 0.0 is the lowest value and 1.0 the highest
       * </pre>
       *
       * <code>float ratio = 2;</code>
       */
      public Builder clearRatio() {
        
        ratio_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:is.vision.CameraSetting)
    }

    // @@protoc_insertion_point(class_scope:is.vision.CameraSetting)
    private static final com.is.vision.Camera.CameraSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.is.vision.Camera.CameraSetting();
    }

    public static com.is.vision.Camera.CameraSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraSetting>
        PARSER = new com.google.protobuf.AbstractParser<CameraSetting>() {
      public CameraSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraSetting(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraSetting> getParserForType() {
      return PARSER;
    }

    public com.is.vision.Camera.CameraSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:is.vision.CameraSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    boolean hasBrightness();
    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    com.is.vision.Camera.CameraSetting getBrightness();
    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getBrightnessOrBuilder();

    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    boolean hasExposure();
    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    com.is.vision.Camera.CameraSetting getExposure();
    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getExposureOrBuilder();

    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    boolean hasFocus();
    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    com.is.vision.Camera.CameraSetting getFocus();
    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getFocusOrBuilder();

    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    boolean hasGain();
    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    com.is.vision.Camera.CameraSetting getGain();
    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getGainOrBuilder();

    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    boolean hasGamma();
    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    com.is.vision.Camera.CameraSetting getGamma();
    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getGammaOrBuilder();

    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    boolean hasHue();
    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    com.is.vision.Camera.CameraSetting getHue();
    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getHueOrBuilder();

    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    boolean hasIris();
    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    com.is.vision.Camera.CameraSetting getIris();
    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getIrisOrBuilder();

    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    boolean hasSaturation();
    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    com.is.vision.Camera.CameraSetting getSaturation();
    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getSaturationOrBuilder();

    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    boolean hasSharpness();
    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    com.is.vision.Camera.CameraSetting getSharpness();
    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getSharpnessOrBuilder();

    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    boolean hasShutter();
    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    com.is.vision.Camera.CameraSetting getShutter();
    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getShutterOrBuilder();

    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    boolean hasWhiteBalanceBu();
    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    com.is.vision.Camera.CameraSetting getWhiteBalanceBu();
    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceBuOrBuilder();

    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    boolean hasWhiteBalanceRv();
    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    com.is.vision.Camera.CameraSetting getWhiteBalanceRv();
    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceRvOrBuilder();

    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    boolean hasZoom();
    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    com.is.vision.Camera.CameraSetting getZoom();
    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    com.is.vision.Camera.CameraSettingOrBuilder getZoomOrBuilder();
  }
  /**
   * Protobuf type {@code is.vision.CameraSettings}
   */
  public  static final class CameraSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:is.vision.CameraSettings)
      CameraSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraSettings.newBuilder() to construct.
    private CameraSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraSettings() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (brightness_ != null) {
                subBuilder = brightness_.toBuilder();
              }
              brightness_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(brightness_);
                brightness_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (exposure_ != null) {
                subBuilder = exposure_.toBuilder();
              }
              exposure_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(exposure_);
                exposure_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (focus_ != null) {
                subBuilder = focus_.toBuilder();
              }
              focus_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(focus_);
                focus_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (gain_ != null) {
                subBuilder = gain_.toBuilder();
              }
              gain_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gain_);
                gain_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (gamma_ != null) {
                subBuilder = gamma_.toBuilder();
              }
              gamma_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gamma_);
                gamma_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (hue_ != null) {
                subBuilder = hue_.toBuilder();
              }
              hue_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hue_);
                hue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (iris_ != null) {
                subBuilder = iris_.toBuilder();
              }
              iris_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iris_);
                iris_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (saturation_ != null) {
                subBuilder = saturation_.toBuilder();
              }
              saturation_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(saturation_);
                saturation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (sharpness_ != null) {
                subBuilder = sharpness_.toBuilder();
              }
              sharpness_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sharpness_);
                sharpness_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (shutter_ != null) {
                subBuilder = shutter_.toBuilder();
              }
              shutter_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shutter_);
                shutter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (whiteBalanceBu_ != null) {
                subBuilder = whiteBalanceBu_.toBuilder();
              }
              whiteBalanceBu_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(whiteBalanceBu_);
                whiteBalanceBu_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (whiteBalanceRv_ != null) {
                subBuilder = whiteBalanceRv_.toBuilder();
              }
              whiteBalanceRv_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(whiteBalanceRv_);
                whiteBalanceRv_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.is.vision.Camera.CameraSetting.Builder subBuilder = null;
              if (zoom_ != null) {
                subBuilder = zoom_.toBuilder();
              }
              zoom_ = input.readMessage(com.is.vision.Camera.CameraSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(zoom_);
                zoom_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.is.vision.Camera.internal_static_is_vision_CameraSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.is.vision.Camera.internal_static_is_vision_CameraSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.is.vision.Camera.CameraSettings.class, com.is.vision.Camera.CameraSettings.Builder.class);
    }

    public static final int BRIGHTNESS_FIELD_NUMBER = 1;
    private com.is.vision.Camera.CameraSetting brightness_;
    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    public boolean hasBrightness() {
      return brightness_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    public com.is.vision.Camera.CameraSetting getBrightness() {
      return brightness_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : brightness_;
    }
    /**
     * <code>.is.vision.CameraSetting brightness = 1;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getBrightnessOrBuilder() {
      return getBrightness();
    }

    public static final int EXPOSURE_FIELD_NUMBER = 2;
    private com.is.vision.Camera.CameraSetting exposure_;
    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    public boolean hasExposure() {
      return exposure_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    public com.is.vision.Camera.CameraSetting getExposure() {
      return exposure_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : exposure_;
    }
    /**
     * <code>.is.vision.CameraSetting exposure = 2;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getExposureOrBuilder() {
      return getExposure();
    }

    public static final int FOCUS_FIELD_NUMBER = 3;
    private com.is.vision.Camera.CameraSetting focus_;
    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    public boolean hasFocus() {
      return focus_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    public com.is.vision.Camera.CameraSetting getFocus() {
      return focus_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : focus_;
    }
    /**
     * <code>.is.vision.CameraSetting focus = 3;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getFocusOrBuilder() {
      return getFocus();
    }

    public static final int GAIN_FIELD_NUMBER = 4;
    private com.is.vision.Camera.CameraSetting gain_;
    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    public boolean hasGain() {
      return gain_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    public com.is.vision.Camera.CameraSetting getGain() {
      return gain_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : gain_;
    }
    /**
     * <code>.is.vision.CameraSetting gain = 4;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getGainOrBuilder() {
      return getGain();
    }

    public static final int GAMMA_FIELD_NUMBER = 5;
    private com.is.vision.Camera.CameraSetting gamma_;
    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    public boolean hasGamma() {
      return gamma_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    public com.is.vision.Camera.CameraSetting getGamma() {
      return gamma_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : gamma_;
    }
    /**
     * <code>.is.vision.CameraSetting gamma = 5;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getGammaOrBuilder() {
      return getGamma();
    }

    public static final int HUE_FIELD_NUMBER = 6;
    private com.is.vision.Camera.CameraSetting hue_;
    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    public boolean hasHue() {
      return hue_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    public com.is.vision.Camera.CameraSetting getHue() {
      return hue_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : hue_;
    }
    /**
     * <code>.is.vision.CameraSetting hue = 6;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getHueOrBuilder() {
      return getHue();
    }

    public static final int IRIS_FIELD_NUMBER = 7;
    private com.is.vision.Camera.CameraSetting iris_;
    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    public boolean hasIris() {
      return iris_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    public com.is.vision.Camera.CameraSetting getIris() {
      return iris_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : iris_;
    }
    /**
     * <code>.is.vision.CameraSetting iris = 7;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getIrisOrBuilder() {
      return getIris();
    }

    public static final int SATURATION_FIELD_NUMBER = 8;
    private com.is.vision.Camera.CameraSetting saturation_;
    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    public boolean hasSaturation() {
      return saturation_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    public com.is.vision.Camera.CameraSetting getSaturation() {
      return saturation_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : saturation_;
    }
    /**
     * <code>.is.vision.CameraSetting saturation = 8;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getSaturationOrBuilder() {
      return getSaturation();
    }

    public static final int SHARPNESS_FIELD_NUMBER = 9;
    private com.is.vision.Camera.CameraSetting sharpness_;
    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    public boolean hasSharpness() {
      return sharpness_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    public com.is.vision.Camera.CameraSetting getSharpness() {
      return sharpness_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : sharpness_;
    }
    /**
     * <code>.is.vision.CameraSetting sharpness = 9;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getSharpnessOrBuilder() {
      return getSharpness();
    }

    public static final int SHUTTER_FIELD_NUMBER = 10;
    private com.is.vision.Camera.CameraSetting shutter_;
    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    public boolean hasShutter() {
      return shutter_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    public com.is.vision.Camera.CameraSetting getShutter() {
      return shutter_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : shutter_;
    }
    /**
     * <code>.is.vision.CameraSetting shutter = 10;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getShutterOrBuilder() {
      return getShutter();
    }

    public static final int WHITE_BALANCE_BU_FIELD_NUMBER = 11;
    private com.is.vision.Camera.CameraSetting whiteBalanceBu_;
    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    public boolean hasWhiteBalanceBu() {
      return whiteBalanceBu_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    public com.is.vision.Camera.CameraSetting getWhiteBalanceBu() {
      return whiteBalanceBu_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceBu_;
    }
    /**
     * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceBuOrBuilder() {
      return getWhiteBalanceBu();
    }

    public static final int WHITE_BALANCE_RV_FIELD_NUMBER = 12;
    private com.is.vision.Camera.CameraSetting whiteBalanceRv_;
    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    public boolean hasWhiteBalanceRv() {
      return whiteBalanceRv_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    public com.is.vision.Camera.CameraSetting getWhiteBalanceRv() {
      return whiteBalanceRv_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceRv_;
    }
    /**
     * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceRvOrBuilder() {
      return getWhiteBalanceRv();
    }

    public static final int ZOOM_FIELD_NUMBER = 13;
    private com.is.vision.Camera.CameraSetting zoom_;
    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    public boolean hasZoom() {
      return zoom_ != null;
    }
    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    public com.is.vision.Camera.CameraSetting getZoom() {
      return zoom_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : zoom_;
    }
    /**
     * <code>.is.vision.CameraSetting zoom = 13;</code>
     */
    public com.is.vision.Camera.CameraSettingOrBuilder getZoomOrBuilder() {
      return getZoom();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (brightness_ != null) {
        output.writeMessage(1, getBrightness());
      }
      if (exposure_ != null) {
        output.writeMessage(2, getExposure());
      }
      if (focus_ != null) {
        output.writeMessage(3, getFocus());
      }
      if (gain_ != null) {
        output.writeMessage(4, getGain());
      }
      if (gamma_ != null) {
        output.writeMessage(5, getGamma());
      }
      if (hue_ != null) {
        output.writeMessage(6, getHue());
      }
      if (iris_ != null) {
        output.writeMessage(7, getIris());
      }
      if (saturation_ != null) {
        output.writeMessage(8, getSaturation());
      }
      if (sharpness_ != null) {
        output.writeMessage(9, getSharpness());
      }
      if (shutter_ != null) {
        output.writeMessage(10, getShutter());
      }
      if (whiteBalanceBu_ != null) {
        output.writeMessage(11, getWhiteBalanceBu());
      }
      if (whiteBalanceRv_ != null) {
        output.writeMessage(12, getWhiteBalanceRv());
      }
      if (zoom_ != null) {
        output.writeMessage(13, getZoom());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (brightness_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBrightness());
      }
      if (exposure_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getExposure());
      }
      if (focus_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFocus());
      }
      if (gain_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGain());
      }
      if (gamma_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGamma());
      }
      if (hue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHue());
      }
      if (iris_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getIris());
      }
      if (saturation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getSaturation());
      }
      if (sharpness_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getSharpness());
      }
      if (shutter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getShutter());
      }
      if (whiteBalanceBu_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getWhiteBalanceBu());
      }
      if (whiteBalanceRv_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getWhiteBalanceRv());
      }
      if (zoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getZoom());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.is.vision.Camera.CameraSettings)) {
        return super.equals(obj);
      }
      com.is.vision.Camera.CameraSettings other = (com.is.vision.Camera.CameraSettings) obj;

      boolean result = true;
      result = result && (hasBrightness() == other.hasBrightness());
      if (hasBrightness()) {
        result = result && getBrightness()
            .equals(other.getBrightness());
      }
      result = result && (hasExposure() == other.hasExposure());
      if (hasExposure()) {
        result = result && getExposure()
            .equals(other.getExposure());
      }
      result = result && (hasFocus() == other.hasFocus());
      if (hasFocus()) {
        result = result && getFocus()
            .equals(other.getFocus());
      }
      result = result && (hasGain() == other.hasGain());
      if (hasGain()) {
        result = result && getGain()
            .equals(other.getGain());
      }
      result = result && (hasGamma() == other.hasGamma());
      if (hasGamma()) {
        result = result && getGamma()
            .equals(other.getGamma());
      }
      result = result && (hasHue() == other.hasHue());
      if (hasHue()) {
        result = result && getHue()
            .equals(other.getHue());
      }
      result = result && (hasIris() == other.hasIris());
      if (hasIris()) {
        result = result && getIris()
            .equals(other.getIris());
      }
      result = result && (hasSaturation() == other.hasSaturation());
      if (hasSaturation()) {
        result = result && getSaturation()
            .equals(other.getSaturation());
      }
      result = result && (hasSharpness() == other.hasSharpness());
      if (hasSharpness()) {
        result = result && getSharpness()
            .equals(other.getSharpness());
      }
      result = result && (hasShutter() == other.hasShutter());
      if (hasShutter()) {
        result = result && getShutter()
            .equals(other.getShutter());
      }
      result = result && (hasWhiteBalanceBu() == other.hasWhiteBalanceBu());
      if (hasWhiteBalanceBu()) {
        result = result && getWhiteBalanceBu()
            .equals(other.getWhiteBalanceBu());
      }
      result = result && (hasWhiteBalanceRv() == other.hasWhiteBalanceRv());
      if (hasWhiteBalanceRv()) {
        result = result && getWhiteBalanceRv()
            .equals(other.getWhiteBalanceRv());
      }
      result = result && (hasZoom() == other.hasZoom());
      if (hasZoom()) {
        result = result && getZoom()
            .equals(other.getZoom());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBrightness()) {
        hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
        hash = (53 * hash) + getBrightness().hashCode();
      }
      if (hasExposure()) {
        hash = (37 * hash) + EXPOSURE_FIELD_NUMBER;
        hash = (53 * hash) + getExposure().hashCode();
      }
      if (hasFocus()) {
        hash = (37 * hash) + FOCUS_FIELD_NUMBER;
        hash = (53 * hash) + getFocus().hashCode();
      }
      if (hasGain()) {
        hash = (37 * hash) + GAIN_FIELD_NUMBER;
        hash = (53 * hash) + getGain().hashCode();
      }
      if (hasGamma()) {
        hash = (37 * hash) + GAMMA_FIELD_NUMBER;
        hash = (53 * hash) + getGamma().hashCode();
      }
      if (hasHue()) {
        hash = (37 * hash) + HUE_FIELD_NUMBER;
        hash = (53 * hash) + getHue().hashCode();
      }
      if (hasIris()) {
        hash = (37 * hash) + IRIS_FIELD_NUMBER;
        hash = (53 * hash) + getIris().hashCode();
      }
      if (hasSaturation()) {
        hash = (37 * hash) + SATURATION_FIELD_NUMBER;
        hash = (53 * hash) + getSaturation().hashCode();
      }
      if (hasSharpness()) {
        hash = (37 * hash) + SHARPNESS_FIELD_NUMBER;
        hash = (53 * hash) + getSharpness().hashCode();
      }
      if (hasShutter()) {
        hash = (37 * hash) + SHUTTER_FIELD_NUMBER;
        hash = (53 * hash) + getShutter().hashCode();
      }
      if (hasWhiteBalanceBu()) {
        hash = (37 * hash) + WHITE_BALANCE_BU_FIELD_NUMBER;
        hash = (53 * hash) + getWhiteBalanceBu().hashCode();
      }
      if (hasWhiteBalanceRv()) {
        hash = (37 * hash) + WHITE_BALANCE_RV_FIELD_NUMBER;
        hash = (53 * hash) + getWhiteBalanceRv().hashCode();
      }
      if (hasZoom()) {
        hash = (37 * hash) + ZOOM_FIELD_NUMBER;
        hash = (53 * hash) + getZoom().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.is.vision.Camera.CameraSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.is.vision.Camera.CameraSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code is.vision.CameraSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:is.vision.CameraSettings)
        com.is.vision.Camera.CameraSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSettings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.is.vision.Camera.CameraSettings.class, com.is.vision.Camera.CameraSettings.Builder.class);
      }

      // Construct using com.is.vision.Camera.CameraSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (brightnessBuilder_ == null) {
          brightness_ = null;
        } else {
          brightness_ = null;
          brightnessBuilder_ = null;
        }
        if (exposureBuilder_ == null) {
          exposure_ = null;
        } else {
          exposure_ = null;
          exposureBuilder_ = null;
        }
        if (focusBuilder_ == null) {
          focus_ = null;
        } else {
          focus_ = null;
          focusBuilder_ = null;
        }
        if (gainBuilder_ == null) {
          gain_ = null;
        } else {
          gain_ = null;
          gainBuilder_ = null;
        }
        if (gammaBuilder_ == null) {
          gamma_ = null;
        } else {
          gamma_ = null;
          gammaBuilder_ = null;
        }
        if (hueBuilder_ == null) {
          hue_ = null;
        } else {
          hue_ = null;
          hueBuilder_ = null;
        }
        if (irisBuilder_ == null) {
          iris_ = null;
        } else {
          iris_ = null;
          irisBuilder_ = null;
        }
        if (saturationBuilder_ == null) {
          saturation_ = null;
        } else {
          saturation_ = null;
          saturationBuilder_ = null;
        }
        if (sharpnessBuilder_ == null) {
          sharpness_ = null;
        } else {
          sharpness_ = null;
          sharpnessBuilder_ = null;
        }
        if (shutterBuilder_ == null) {
          shutter_ = null;
        } else {
          shutter_ = null;
          shutterBuilder_ = null;
        }
        if (whiteBalanceBuBuilder_ == null) {
          whiteBalanceBu_ = null;
        } else {
          whiteBalanceBu_ = null;
          whiteBalanceBuBuilder_ = null;
        }
        if (whiteBalanceRvBuilder_ == null) {
          whiteBalanceRv_ = null;
        } else {
          whiteBalanceRv_ = null;
          whiteBalanceRvBuilder_ = null;
        }
        if (zoomBuilder_ == null) {
          zoom_ = null;
        } else {
          zoom_ = null;
          zoomBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.is.vision.Camera.internal_static_is_vision_CameraSettings_descriptor;
      }

      public com.is.vision.Camera.CameraSettings getDefaultInstanceForType() {
        return com.is.vision.Camera.CameraSettings.getDefaultInstance();
      }

      public com.is.vision.Camera.CameraSettings build() {
        com.is.vision.Camera.CameraSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.is.vision.Camera.CameraSettings buildPartial() {
        com.is.vision.Camera.CameraSettings result = new com.is.vision.Camera.CameraSettings(this);
        if (brightnessBuilder_ == null) {
          result.brightness_ = brightness_;
        } else {
          result.brightness_ = brightnessBuilder_.build();
        }
        if (exposureBuilder_ == null) {
          result.exposure_ = exposure_;
        } else {
          result.exposure_ = exposureBuilder_.build();
        }
        if (focusBuilder_ == null) {
          result.focus_ = focus_;
        } else {
          result.focus_ = focusBuilder_.build();
        }
        if (gainBuilder_ == null) {
          result.gain_ = gain_;
        } else {
          result.gain_ = gainBuilder_.build();
        }
        if (gammaBuilder_ == null) {
          result.gamma_ = gamma_;
        } else {
          result.gamma_ = gammaBuilder_.build();
        }
        if (hueBuilder_ == null) {
          result.hue_ = hue_;
        } else {
          result.hue_ = hueBuilder_.build();
        }
        if (irisBuilder_ == null) {
          result.iris_ = iris_;
        } else {
          result.iris_ = irisBuilder_.build();
        }
        if (saturationBuilder_ == null) {
          result.saturation_ = saturation_;
        } else {
          result.saturation_ = saturationBuilder_.build();
        }
        if (sharpnessBuilder_ == null) {
          result.sharpness_ = sharpness_;
        } else {
          result.sharpness_ = sharpnessBuilder_.build();
        }
        if (shutterBuilder_ == null) {
          result.shutter_ = shutter_;
        } else {
          result.shutter_ = shutterBuilder_.build();
        }
        if (whiteBalanceBuBuilder_ == null) {
          result.whiteBalanceBu_ = whiteBalanceBu_;
        } else {
          result.whiteBalanceBu_ = whiteBalanceBuBuilder_.build();
        }
        if (whiteBalanceRvBuilder_ == null) {
          result.whiteBalanceRv_ = whiteBalanceRv_;
        } else {
          result.whiteBalanceRv_ = whiteBalanceRvBuilder_.build();
        }
        if (zoomBuilder_ == null) {
          result.zoom_ = zoom_;
        } else {
          result.zoom_ = zoomBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.is.vision.Camera.CameraSettings) {
          return mergeFrom((com.is.vision.Camera.CameraSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.is.vision.Camera.CameraSettings other) {
        if (other == com.is.vision.Camera.CameraSettings.getDefaultInstance()) return this;
        if (other.hasBrightness()) {
          mergeBrightness(other.getBrightness());
        }
        if (other.hasExposure()) {
          mergeExposure(other.getExposure());
        }
        if (other.hasFocus()) {
          mergeFocus(other.getFocus());
        }
        if (other.hasGain()) {
          mergeGain(other.getGain());
        }
        if (other.hasGamma()) {
          mergeGamma(other.getGamma());
        }
        if (other.hasHue()) {
          mergeHue(other.getHue());
        }
        if (other.hasIris()) {
          mergeIris(other.getIris());
        }
        if (other.hasSaturation()) {
          mergeSaturation(other.getSaturation());
        }
        if (other.hasSharpness()) {
          mergeSharpness(other.getSharpness());
        }
        if (other.hasShutter()) {
          mergeShutter(other.getShutter());
        }
        if (other.hasWhiteBalanceBu()) {
          mergeWhiteBalanceBu(other.getWhiteBalanceBu());
        }
        if (other.hasWhiteBalanceRv()) {
          mergeWhiteBalanceRv(other.getWhiteBalanceRv());
        }
        if (other.hasZoom()) {
          mergeZoom(other.getZoom());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.is.vision.Camera.CameraSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.is.vision.Camera.CameraSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.is.vision.Camera.CameraSetting brightness_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> brightnessBuilder_;
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public boolean hasBrightness() {
        return brightnessBuilder_ != null || brightness_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public com.is.vision.Camera.CameraSetting getBrightness() {
        if (brightnessBuilder_ == null) {
          return brightness_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : brightness_;
        } else {
          return brightnessBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public Builder setBrightness(com.is.vision.Camera.CameraSetting value) {
        if (brightnessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          brightness_ = value;
          onChanged();
        } else {
          brightnessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public Builder setBrightness(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (brightnessBuilder_ == null) {
          brightness_ = builderForValue.build();
          onChanged();
        } else {
          brightnessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public Builder mergeBrightness(com.is.vision.Camera.CameraSetting value) {
        if (brightnessBuilder_ == null) {
          if (brightness_ != null) {
            brightness_ =
              com.is.vision.Camera.CameraSetting.newBuilder(brightness_).mergeFrom(value).buildPartial();
          } else {
            brightness_ = value;
          }
          onChanged();
        } else {
          brightnessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public Builder clearBrightness() {
        if (brightnessBuilder_ == null) {
          brightness_ = null;
          onChanged();
        } else {
          brightness_ = null;
          brightnessBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getBrightnessBuilder() {
        
        onChanged();
        return getBrightnessFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getBrightnessOrBuilder() {
        if (brightnessBuilder_ != null) {
          return brightnessBuilder_.getMessageOrBuilder();
        } else {
          return brightness_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : brightness_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting brightness = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getBrightnessFieldBuilder() {
        if (brightnessBuilder_ == null) {
          brightnessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getBrightness(),
                  getParentForChildren(),
                  isClean());
          brightness_ = null;
        }
        return brightnessBuilder_;
      }

      private com.is.vision.Camera.CameraSetting exposure_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> exposureBuilder_;
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public boolean hasExposure() {
        return exposureBuilder_ != null || exposure_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public com.is.vision.Camera.CameraSetting getExposure() {
        if (exposureBuilder_ == null) {
          return exposure_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : exposure_;
        } else {
          return exposureBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public Builder setExposure(com.is.vision.Camera.CameraSetting value) {
        if (exposureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          exposure_ = value;
          onChanged();
        } else {
          exposureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public Builder setExposure(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (exposureBuilder_ == null) {
          exposure_ = builderForValue.build();
          onChanged();
        } else {
          exposureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public Builder mergeExposure(com.is.vision.Camera.CameraSetting value) {
        if (exposureBuilder_ == null) {
          if (exposure_ != null) {
            exposure_ =
              com.is.vision.Camera.CameraSetting.newBuilder(exposure_).mergeFrom(value).buildPartial();
          } else {
            exposure_ = value;
          }
          onChanged();
        } else {
          exposureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public Builder clearExposure() {
        if (exposureBuilder_ == null) {
          exposure_ = null;
          onChanged();
        } else {
          exposure_ = null;
          exposureBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getExposureBuilder() {
        
        onChanged();
        return getExposureFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getExposureOrBuilder() {
        if (exposureBuilder_ != null) {
          return exposureBuilder_.getMessageOrBuilder();
        } else {
          return exposure_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : exposure_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting exposure = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getExposureFieldBuilder() {
        if (exposureBuilder_ == null) {
          exposureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getExposure(),
                  getParentForChildren(),
                  isClean());
          exposure_ = null;
        }
        return exposureBuilder_;
      }

      private com.is.vision.Camera.CameraSetting focus_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> focusBuilder_;
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public boolean hasFocus() {
        return focusBuilder_ != null || focus_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public com.is.vision.Camera.CameraSetting getFocus() {
        if (focusBuilder_ == null) {
          return focus_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : focus_;
        } else {
          return focusBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public Builder setFocus(com.is.vision.Camera.CameraSetting value) {
        if (focusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          focus_ = value;
          onChanged();
        } else {
          focusBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public Builder setFocus(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (focusBuilder_ == null) {
          focus_ = builderForValue.build();
          onChanged();
        } else {
          focusBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public Builder mergeFocus(com.is.vision.Camera.CameraSetting value) {
        if (focusBuilder_ == null) {
          if (focus_ != null) {
            focus_ =
              com.is.vision.Camera.CameraSetting.newBuilder(focus_).mergeFrom(value).buildPartial();
          } else {
            focus_ = value;
          }
          onChanged();
        } else {
          focusBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public Builder clearFocus() {
        if (focusBuilder_ == null) {
          focus_ = null;
          onChanged();
        } else {
          focus_ = null;
          focusBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getFocusBuilder() {
        
        onChanged();
        return getFocusFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getFocusOrBuilder() {
        if (focusBuilder_ != null) {
          return focusBuilder_.getMessageOrBuilder();
        } else {
          return focus_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : focus_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting focus = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getFocusFieldBuilder() {
        if (focusBuilder_ == null) {
          focusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getFocus(),
                  getParentForChildren(),
                  isClean());
          focus_ = null;
        }
        return focusBuilder_;
      }

      private com.is.vision.Camera.CameraSetting gain_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> gainBuilder_;
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public boolean hasGain() {
        return gainBuilder_ != null || gain_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public com.is.vision.Camera.CameraSetting getGain() {
        if (gainBuilder_ == null) {
          return gain_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : gain_;
        } else {
          return gainBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public Builder setGain(com.is.vision.Camera.CameraSetting value) {
        if (gainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gain_ = value;
          onChanged();
        } else {
          gainBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public Builder setGain(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (gainBuilder_ == null) {
          gain_ = builderForValue.build();
          onChanged();
        } else {
          gainBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public Builder mergeGain(com.is.vision.Camera.CameraSetting value) {
        if (gainBuilder_ == null) {
          if (gain_ != null) {
            gain_ =
              com.is.vision.Camera.CameraSetting.newBuilder(gain_).mergeFrom(value).buildPartial();
          } else {
            gain_ = value;
          }
          onChanged();
        } else {
          gainBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public Builder clearGain() {
        if (gainBuilder_ == null) {
          gain_ = null;
          onChanged();
        } else {
          gain_ = null;
          gainBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getGainBuilder() {
        
        onChanged();
        return getGainFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getGainOrBuilder() {
        if (gainBuilder_ != null) {
          return gainBuilder_.getMessageOrBuilder();
        } else {
          return gain_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : gain_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting gain = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getGainFieldBuilder() {
        if (gainBuilder_ == null) {
          gainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getGain(),
                  getParentForChildren(),
                  isClean());
          gain_ = null;
        }
        return gainBuilder_;
      }

      private com.is.vision.Camera.CameraSetting gamma_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> gammaBuilder_;
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public boolean hasGamma() {
        return gammaBuilder_ != null || gamma_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public com.is.vision.Camera.CameraSetting getGamma() {
        if (gammaBuilder_ == null) {
          return gamma_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : gamma_;
        } else {
          return gammaBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public Builder setGamma(com.is.vision.Camera.CameraSetting value) {
        if (gammaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gamma_ = value;
          onChanged();
        } else {
          gammaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public Builder setGamma(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (gammaBuilder_ == null) {
          gamma_ = builderForValue.build();
          onChanged();
        } else {
          gammaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public Builder mergeGamma(com.is.vision.Camera.CameraSetting value) {
        if (gammaBuilder_ == null) {
          if (gamma_ != null) {
            gamma_ =
              com.is.vision.Camera.CameraSetting.newBuilder(gamma_).mergeFrom(value).buildPartial();
          } else {
            gamma_ = value;
          }
          onChanged();
        } else {
          gammaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public Builder clearGamma() {
        if (gammaBuilder_ == null) {
          gamma_ = null;
          onChanged();
        } else {
          gamma_ = null;
          gammaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getGammaBuilder() {
        
        onChanged();
        return getGammaFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getGammaOrBuilder() {
        if (gammaBuilder_ != null) {
          return gammaBuilder_.getMessageOrBuilder();
        } else {
          return gamma_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : gamma_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting gamma = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getGammaFieldBuilder() {
        if (gammaBuilder_ == null) {
          gammaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getGamma(),
                  getParentForChildren(),
                  isClean());
          gamma_ = null;
        }
        return gammaBuilder_;
      }

      private com.is.vision.Camera.CameraSetting hue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> hueBuilder_;
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public boolean hasHue() {
        return hueBuilder_ != null || hue_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public com.is.vision.Camera.CameraSetting getHue() {
        if (hueBuilder_ == null) {
          return hue_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : hue_;
        } else {
          return hueBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public Builder setHue(com.is.vision.Camera.CameraSetting value) {
        if (hueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hue_ = value;
          onChanged();
        } else {
          hueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public Builder setHue(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (hueBuilder_ == null) {
          hue_ = builderForValue.build();
          onChanged();
        } else {
          hueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public Builder mergeHue(com.is.vision.Camera.CameraSetting value) {
        if (hueBuilder_ == null) {
          if (hue_ != null) {
            hue_ =
              com.is.vision.Camera.CameraSetting.newBuilder(hue_).mergeFrom(value).buildPartial();
          } else {
            hue_ = value;
          }
          onChanged();
        } else {
          hueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public Builder clearHue() {
        if (hueBuilder_ == null) {
          hue_ = null;
          onChanged();
        } else {
          hue_ = null;
          hueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getHueBuilder() {
        
        onChanged();
        return getHueFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getHueOrBuilder() {
        if (hueBuilder_ != null) {
          return hueBuilder_.getMessageOrBuilder();
        } else {
          return hue_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : hue_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting hue = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getHueFieldBuilder() {
        if (hueBuilder_ == null) {
          hueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getHue(),
                  getParentForChildren(),
                  isClean());
          hue_ = null;
        }
        return hueBuilder_;
      }

      private com.is.vision.Camera.CameraSetting iris_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> irisBuilder_;
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public boolean hasIris() {
        return irisBuilder_ != null || iris_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public com.is.vision.Camera.CameraSetting getIris() {
        if (irisBuilder_ == null) {
          return iris_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : iris_;
        } else {
          return irisBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public Builder setIris(com.is.vision.Camera.CameraSetting value) {
        if (irisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iris_ = value;
          onChanged();
        } else {
          irisBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public Builder setIris(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (irisBuilder_ == null) {
          iris_ = builderForValue.build();
          onChanged();
        } else {
          irisBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public Builder mergeIris(com.is.vision.Camera.CameraSetting value) {
        if (irisBuilder_ == null) {
          if (iris_ != null) {
            iris_ =
              com.is.vision.Camera.CameraSetting.newBuilder(iris_).mergeFrom(value).buildPartial();
          } else {
            iris_ = value;
          }
          onChanged();
        } else {
          irisBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public Builder clearIris() {
        if (irisBuilder_ == null) {
          iris_ = null;
          onChanged();
        } else {
          iris_ = null;
          irisBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getIrisBuilder() {
        
        onChanged();
        return getIrisFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getIrisOrBuilder() {
        if (irisBuilder_ != null) {
          return irisBuilder_.getMessageOrBuilder();
        } else {
          return iris_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : iris_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting iris = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getIrisFieldBuilder() {
        if (irisBuilder_ == null) {
          irisBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getIris(),
                  getParentForChildren(),
                  isClean());
          iris_ = null;
        }
        return irisBuilder_;
      }

      private com.is.vision.Camera.CameraSetting saturation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> saturationBuilder_;
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public boolean hasSaturation() {
        return saturationBuilder_ != null || saturation_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public com.is.vision.Camera.CameraSetting getSaturation() {
        if (saturationBuilder_ == null) {
          return saturation_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : saturation_;
        } else {
          return saturationBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public Builder setSaturation(com.is.vision.Camera.CameraSetting value) {
        if (saturationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          saturation_ = value;
          onChanged();
        } else {
          saturationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public Builder setSaturation(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (saturationBuilder_ == null) {
          saturation_ = builderForValue.build();
          onChanged();
        } else {
          saturationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public Builder mergeSaturation(com.is.vision.Camera.CameraSetting value) {
        if (saturationBuilder_ == null) {
          if (saturation_ != null) {
            saturation_ =
              com.is.vision.Camera.CameraSetting.newBuilder(saturation_).mergeFrom(value).buildPartial();
          } else {
            saturation_ = value;
          }
          onChanged();
        } else {
          saturationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public Builder clearSaturation() {
        if (saturationBuilder_ == null) {
          saturation_ = null;
          onChanged();
        } else {
          saturation_ = null;
          saturationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getSaturationBuilder() {
        
        onChanged();
        return getSaturationFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getSaturationOrBuilder() {
        if (saturationBuilder_ != null) {
          return saturationBuilder_.getMessageOrBuilder();
        } else {
          return saturation_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : saturation_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting saturation = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getSaturationFieldBuilder() {
        if (saturationBuilder_ == null) {
          saturationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getSaturation(),
                  getParentForChildren(),
                  isClean());
          saturation_ = null;
        }
        return saturationBuilder_;
      }

      private com.is.vision.Camera.CameraSetting sharpness_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> sharpnessBuilder_;
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public boolean hasSharpness() {
        return sharpnessBuilder_ != null || sharpness_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public com.is.vision.Camera.CameraSetting getSharpness() {
        if (sharpnessBuilder_ == null) {
          return sharpness_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : sharpness_;
        } else {
          return sharpnessBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public Builder setSharpness(com.is.vision.Camera.CameraSetting value) {
        if (sharpnessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sharpness_ = value;
          onChanged();
        } else {
          sharpnessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public Builder setSharpness(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (sharpnessBuilder_ == null) {
          sharpness_ = builderForValue.build();
          onChanged();
        } else {
          sharpnessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public Builder mergeSharpness(com.is.vision.Camera.CameraSetting value) {
        if (sharpnessBuilder_ == null) {
          if (sharpness_ != null) {
            sharpness_ =
              com.is.vision.Camera.CameraSetting.newBuilder(sharpness_).mergeFrom(value).buildPartial();
          } else {
            sharpness_ = value;
          }
          onChanged();
        } else {
          sharpnessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public Builder clearSharpness() {
        if (sharpnessBuilder_ == null) {
          sharpness_ = null;
          onChanged();
        } else {
          sharpness_ = null;
          sharpnessBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getSharpnessBuilder() {
        
        onChanged();
        return getSharpnessFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getSharpnessOrBuilder() {
        if (sharpnessBuilder_ != null) {
          return sharpnessBuilder_.getMessageOrBuilder();
        } else {
          return sharpness_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : sharpness_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting sharpness = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getSharpnessFieldBuilder() {
        if (sharpnessBuilder_ == null) {
          sharpnessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getSharpness(),
                  getParentForChildren(),
                  isClean());
          sharpness_ = null;
        }
        return sharpnessBuilder_;
      }

      private com.is.vision.Camera.CameraSetting shutter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> shutterBuilder_;
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public boolean hasShutter() {
        return shutterBuilder_ != null || shutter_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public com.is.vision.Camera.CameraSetting getShutter() {
        if (shutterBuilder_ == null) {
          return shutter_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : shutter_;
        } else {
          return shutterBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public Builder setShutter(com.is.vision.Camera.CameraSetting value) {
        if (shutterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shutter_ = value;
          onChanged();
        } else {
          shutterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public Builder setShutter(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (shutterBuilder_ == null) {
          shutter_ = builderForValue.build();
          onChanged();
        } else {
          shutterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public Builder mergeShutter(com.is.vision.Camera.CameraSetting value) {
        if (shutterBuilder_ == null) {
          if (shutter_ != null) {
            shutter_ =
              com.is.vision.Camera.CameraSetting.newBuilder(shutter_).mergeFrom(value).buildPartial();
          } else {
            shutter_ = value;
          }
          onChanged();
        } else {
          shutterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public Builder clearShutter() {
        if (shutterBuilder_ == null) {
          shutter_ = null;
          onChanged();
        } else {
          shutter_ = null;
          shutterBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getShutterBuilder() {
        
        onChanged();
        return getShutterFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getShutterOrBuilder() {
        if (shutterBuilder_ != null) {
          return shutterBuilder_.getMessageOrBuilder();
        } else {
          return shutter_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : shutter_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting shutter = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getShutterFieldBuilder() {
        if (shutterBuilder_ == null) {
          shutterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getShutter(),
                  getParentForChildren(),
                  isClean());
          shutter_ = null;
        }
        return shutterBuilder_;
      }

      private com.is.vision.Camera.CameraSetting whiteBalanceBu_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> whiteBalanceBuBuilder_;
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public boolean hasWhiteBalanceBu() {
        return whiteBalanceBuBuilder_ != null || whiteBalanceBu_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public com.is.vision.Camera.CameraSetting getWhiteBalanceBu() {
        if (whiteBalanceBuBuilder_ == null) {
          return whiteBalanceBu_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceBu_;
        } else {
          return whiteBalanceBuBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public Builder setWhiteBalanceBu(com.is.vision.Camera.CameraSetting value) {
        if (whiteBalanceBuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          whiteBalanceBu_ = value;
          onChanged();
        } else {
          whiteBalanceBuBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public Builder setWhiteBalanceBu(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (whiteBalanceBuBuilder_ == null) {
          whiteBalanceBu_ = builderForValue.build();
          onChanged();
        } else {
          whiteBalanceBuBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public Builder mergeWhiteBalanceBu(com.is.vision.Camera.CameraSetting value) {
        if (whiteBalanceBuBuilder_ == null) {
          if (whiteBalanceBu_ != null) {
            whiteBalanceBu_ =
              com.is.vision.Camera.CameraSetting.newBuilder(whiteBalanceBu_).mergeFrom(value).buildPartial();
          } else {
            whiteBalanceBu_ = value;
          }
          onChanged();
        } else {
          whiteBalanceBuBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public Builder clearWhiteBalanceBu() {
        if (whiteBalanceBuBuilder_ == null) {
          whiteBalanceBu_ = null;
          onChanged();
        } else {
          whiteBalanceBu_ = null;
          whiteBalanceBuBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getWhiteBalanceBuBuilder() {
        
        onChanged();
        return getWhiteBalanceBuFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceBuOrBuilder() {
        if (whiteBalanceBuBuilder_ != null) {
          return whiteBalanceBuBuilder_.getMessageOrBuilder();
        } else {
          return whiteBalanceBu_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceBu_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_bu = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getWhiteBalanceBuFieldBuilder() {
        if (whiteBalanceBuBuilder_ == null) {
          whiteBalanceBuBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getWhiteBalanceBu(),
                  getParentForChildren(),
                  isClean());
          whiteBalanceBu_ = null;
        }
        return whiteBalanceBuBuilder_;
      }

      private com.is.vision.Camera.CameraSetting whiteBalanceRv_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> whiteBalanceRvBuilder_;
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public boolean hasWhiteBalanceRv() {
        return whiteBalanceRvBuilder_ != null || whiteBalanceRv_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public com.is.vision.Camera.CameraSetting getWhiteBalanceRv() {
        if (whiteBalanceRvBuilder_ == null) {
          return whiteBalanceRv_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceRv_;
        } else {
          return whiteBalanceRvBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public Builder setWhiteBalanceRv(com.is.vision.Camera.CameraSetting value) {
        if (whiteBalanceRvBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          whiteBalanceRv_ = value;
          onChanged();
        } else {
          whiteBalanceRvBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public Builder setWhiteBalanceRv(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (whiteBalanceRvBuilder_ == null) {
          whiteBalanceRv_ = builderForValue.build();
          onChanged();
        } else {
          whiteBalanceRvBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public Builder mergeWhiteBalanceRv(com.is.vision.Camera.CameraSetting value) {
        if (whiteBalanceRvBuilder_ == null) {
          if (whiteBalanceRv_ != null) {
            whiteBalanceRv_ =
              com.is.vision.Camera.CameraSetting.newBuilder(whiteBalanceRv_).mergeFrom(value).buildPartial();
          } else {
            whiteBalanceRv_ = value;
          }
          onChanged();
        } else {
          whiteBalanceRvBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public Builder clearWhiteBalanceRv() {
        if (whiteBalanceRvBuilder_ == null) {
          whiteBalanceRv_ = null;
          onChanged();
        } else {
          whiteBalanceRv_ = null;
          whiteBalanceRvBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getWhiteBalanceRvBuilder() {
        
        onChanged();
        return getWhiteBalanceRvFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getWhiteBalanceRvOrBuilder() {
        if (whiteBalanceRvBuilder_ != null) {
          return whiteBalanceRvBuilder_.getMessageOrBuilder();
        } else {
          return whiteBalanceRv_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : whiteBalanceRv_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting white_balance_rv = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getWhiteBalanceRvFieldBuilder() {
        if (whiteBalanceRvBuilder_ == null) {
          whiteBalanceRvBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getWhiteBalanceRv(),
                  getParentForChildren(),
                  isClean());
          whiteBalanceRv_ = null;
        }
        return whiteBalanceRvBuilder_;
      }

      private com.is.vision.Camera.CameraSetting zoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> zoomBuilder_;
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public boolean hasZoom() {
        return zoomBuilder_ != null || zoom_ != null;
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public com.is.vision.Camera.CameraSetting getZoom() {
        if (zoomBuilder_ == null) {
          return zoom_ == null ? com.is.vision.Camera.CameraSetting.getDefaultInstance() : zoom_;
        } else {
          return zoomBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public Builder setZoom(com.is.vision.Camera.CameraSetting value) {
        if (zoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          zoom_ = value;
          onChanged();
        } else {
          zoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public Builder setZoom(
          com.is.vision.Camera.CameraSetting.Builder builderForValue) {
        if (zoomBuilder_ == null) {
          zoom_ = builderForValue.build();
          onChanged();
        } else {
          zoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public Builder mergeZoom(com.is.vision.Camera.CameraSetting value) {
        if (zoomBuilder_ == null) {
          if (zoom_ != null) {
            zoom_ =
              com.is.vision.Camera.CameraSetting.newBuilder(zoom_).mergeFrom(value).buildPartial();
          } else {
            zoom_ = value;
          }
          onChanged();
        } else {
          zoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public Builder clearZoom() {
        if (zoomBuilder_ == null) {
          zoom_ = null;
          onChanged();
        } else {
          zoom_ = null;
          zoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public com.is.vision.Camera.CameraSetting.Builder getZoomBuilder() {
        
        onChanged();
        return getZoomFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      public com.is.vision.Camera.CameraSettingOrBuilder getZoomOrBuilder() {
        if (zoomBuilder_ != null) {
          return zoomBuilder_.getMessageOrBuilder();
        } else {
          return zoom_ == null ?
              com.is.vision.Camera.CameraSetting.getDefaultInstance() : zoom_;
        }
      }
      /**
       * <code>.is.vision.CameraSetting zoom = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder> 
          getZoomFieldBuilder() {
        if (zoomBuilder_ == null) {
          zoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSetting, com.is.vision.Camera.CameraSetting.Builder, com.is.vision.Camera.CameraSettingOrBuilder>(
                  getZoom(),
                  getParentForChildren(),
                  isClean());
          zoom_ = null;
        }
        return zoomBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:is.vision.CameraSettings)
    }

    // @@protoc_insertion_point(class_scope:is.vision.CameraSettings)
    private static final com.is.vision.Camera.CameraSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.is.vision.Camera.CameraSettings();
    }

    public static com.is.vision.Camera.CameraSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraSettings>
        PARSER = new com.google.protobuf.AbstractParser<CameraSettings>() {
      public CameraSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraSettings> getParserForType() {
      return PARSER;
    }

    public com.is.vision.Camera.CameraSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:is.vision.CameraConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    boolean hasSampling();
    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    com.is.common.Common.SamplingSettings getSampling();
    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    com.is.common.Common.SamplingSettingsOrBuilder getSamplingOrBuilder();

    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    boolean hasImage();
    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    com.is.vision.ImageOuterClass.ImageSettings getImage();
    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    com.is.vision.ImageOuterClass.ImageSettingsOrBuilder getImageOrBuilder();

    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    boolean hasCamera();
    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    com.is.vision.Camera.CameraSettings getCamera();
    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    com.is.vision.Camera.CameraSettingsOrBuilder getCameraOrBuilder();
  }
  /**
   * Protobuf type {@code is.vision.CameraConfig}
   */
  public  static final class CameraConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:is.vision.CameraConfig)
      CameraConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraConfig.newBuilder() to construct.
    private CameraConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.is.common.Common.SamplingSettings.Builder subBuilder = null;
              if (sampling_ != null) {
                subBuilder = sampling_.toBuilder();
              }
              sampling_ = input.readMessage(com.is.common.Common.SamplingSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sampling_);
                sampling_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.is.vision.ImageOuterClass.ImageSettings.Builder subBuilder = null;
              if (image_ != null) {
                subBuilder = image_.toBuilder();
              }
              image_ = input.readMessage(com.is.vision.ImageOuterClass.ImageSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(image_);
                image_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.is.vision.Camera.CameraSettings.Builder subBuilder = null;
              if (camera_ != null) {
                subBuilder = camera_.toBuilder();
              }
              camera_ = input.readMessage(com.is.vision.Camera.CameraSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(camera_);
                camera_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.is.vision.Camera.internal_static_is_vision_CameraConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.is.vision.Camera.internal_static_is_vision_CameraConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.is.vision.Camera.CameraConfig.class, com.is.vision.Camera.CameraConfig.Builder.class);
    }

    public static final int SAMPLING_FIELD_NUMBER = 1;
    private com.is.common.Common.SamplingSettings sampling_;
    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    public boolean hasSampling() {
      return sampling_ != null;
    }
    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    public com.is.common.Common.SamplingSettings getSampling() {
      return sampling_ == null ? com.is.common.Common.SamplingSettings.getDefaultInstance() : sampling_;
    }
    /**
     * <code>.is.common.SamplingSettings sampling = 1;</code>
     */
    public com.is.common.Common.SamplingSettingsOrBuilder getSamplingOrBuilder() {
      return getSampling();
    }

    public static final int IMAGE_FIELD_NUMBER = 2;
    private com.is.vision.ImageOuterClass.ImageSettings image_;
    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    public boolean hasImage() {
      return image_ != null;
    }
    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    public com.is.vision.ImageOuterClass.ImageSettings getImage() {
      return image_ == null ? com.is.vision.ImageOuterClass.ImageSettings.getDefaultInstance() : image_;
    }
    /**
     * <code>.is.vision.ImageSettings image = 2;</code>
     */
    public com.is.vision.ImageOuterClass.ImageSettingsOrBuilder getImageOrBuilder() {
      return getImage();
    }

    public static final int CAMERA_FIELD_NUMBER = 3;
    private com.is.vision.Camera.CameraSettings camera_;
    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    public boolean hasCamera() {
      return camera_ != null;
    }
    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    public com.is.vision.Camera.CameraSettings getCamera() {
      return camera_ == null ? com.is.vision.Camera.CameraSettings.getDefaultInstance() : camera_;
    }
    /**
     * <code>.is.vision.CameraSettings camera = 3;</code>
     */
    public com.is.vision.Camera.CameraSettingsOrBuilder getCameraOrBuilder() {
      return getCamera();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sampling_ != null) {
        output.writeMessage(1, getSampling());
      }
      if (image_ != null) {
        output.writeMessage(2, getImage());
      }
      if (camera_ != null) {
        output.writeMessage(3, getCamera());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sampling_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSampling());
      }
      if (image_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImage());
      }
      if (camera_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCamera());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.is.vision.Camera.CameraConfig)) {
        return super.equals(obj);
      }
      com.is.vision.Camera.CameraConfig other = (com.is.vision.Camera.CameraConfig) obj;

      boolean result = true;
      result = result && (hasSampling() == other.hasSampling());
      if (hasSampling()) {
        result = result && getSampling()
            .equals(other.getSampling());
      }
      result = result && (hasImage() == other.hasImage());
      if (hasImage()) {
        result = result && getImage()
            .equals(other.getImage());
      }
      result = result && (hasCamera() == other.hasCamera());
      if (hasCamera()) {
        result = result && getCamera()
            .equals(other.getCamera());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSampling()) {
        hash = (37 * hash) + SAMPLING_FIELD_NUMBER;
        hash = (53 * hash) + getSampling().hashCode();
      }
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      if (hasCamera()) {
        hash = (37 * hash) + CAMERA_FIELD_NUMBER;
        hash = (53 * hash) + getCamera().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.is.vision.Camera.CameraConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.is.vision.Camera.CameraConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code is.vision.CameraConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:is.vision.CameraConfig)
        com.is.vision.Camera.CameraConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.is.vision.Camera.internal_static_is_vision_CameraConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.is.vision.Camera.internal_static_is_vision_CameraConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.is.vision.Camera.CameraConfig.class, com.is.vision.Camera.CameraConfig.Builder.class);
      }

      // Construct using com.is.vision.Camera.CameraConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (samplingBuilder_ == null) {
          sampling_ = null;
        } else {
          sampling_ = null;
          samplingBuilder_ = null;
        }
        if (imageBuilder_ == null) {
          image_ = null;
        } else {
          image_ = null;
          imageBuilder_ = null;
        }
        if (cameraBuilder_ == null) {
          camera_ = null;
        } else {
          camera_ = null;
          cameraBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.is.vision.Camera.internal_static_is_vision_CameraConfig_descriptor;
      }

      public com.is.vision.Camera.CameraConfig getDefaultInstanceForType() {
        return com.is.vision.Camera.CameraConfig.getDefaultInstance();
      }

      public com.is.vision.Camera.CameraConfig build() {
        com.is.vision.Camera.CameraConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.is.vision.Camera.CameraConfig buildPartial() {
        com.is.vision.Camera.CameraConfig result = new com.is.vision.Camera.CameraConfig(this);
        if (samplingBuilder_ == null) {
          result.sampling_ = sampling_;
        } else {
          result.sampling_ = samplingBuilder_.build();
        }
        if (imageBuilder_ == null) {
          result.image_ = image_;
        } else {
          result.image_ = imageBuilder_.build();
        }
        if (cameraBuilder_ == null) {
          result.camera_ = camera_;
        } else {
          result.camera_ = cameraBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.is.vision.Camera.CameraConfig) {
          return mergeFrom((com.is.vision.Camera.CameraConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.is.vision.Camera.CameraConfig other) {
        if (other == com.is.vision.Camera.CameraConfig.getDefaultInstance()) return this;
        if (other.hasSampling()) {
          mergeSampling(other.getSampling());
        }
        if (other.hasImage()) {
          mergeImage(other.getImage());
        }
        if (other.hasCamera()) {
          mergeCamera(other.getCamera());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.is.vision.Camera.CameraConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.is.vision.Camera.CameraConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.is.common.Common.SamplingSettings sampling_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.common.Common.SamplingSettings, com.is.common.Common.SamplingSettings.Builder, com.is.common.Common.SamplingSettingsOrBuilder> samplingBuilder_;
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public boolean hasSampling() {
        return samplingBuilder_ != null || sampling_ != null;
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public com.is.common.Common.SamplingSettings getSampling() {
        if (samplingBuilder_ == null) {
          return sampling_ == null ? com.is.common.Common.SamplingSettings.getDefaultInstance() : sampling_;
        } else {
          return samplingBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public Builder setSampling(com.is.common.Common.SamplingSettings value) {
        if (samplingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sampling_ = value;
          onChanged();
        } else {
          samplingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public Builder setSampling(
          com.is.common.Common.SamplingSettings.Builder builderForValue) {
        if (samplingBuilder_ == null) {
          sampling_ = builderForValue.build();
          onChanged();
        } else {
          samplingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public Builder mergeSampling(com.is.common.Common.SamplingSettings value) {
        if (samplingBuilder_ == null) {
          if (sampling_ != null) {
            sampling_ =
              com.is.common.Common.SamplingSettings.newBuilder(sampling_).mergeFrom(value).buildPartial();
          } else {
            sampling_ = value;
          }
          onChanged();
        } else {
          samplingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public Builder clearSampling() {
        if (samplingBuilder_ == null) {
          sampling_ = null;
          onChanged();
        } else {
          sampling_ = null;
          samplingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public com.is.common.Common.SamplingSettings.Builder getSamplingBuilder() {
        
        onChanged();
        return getSamplingFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      public com.is.common.Common.SamplingSettingsOrBuilder getSamplingOrBuilder() {
        if (samplingBuilder_ != null) {
          return samplingBuilder_.getMessageOrBuilder();
        } else {
          return sampling_ == null ?
              com.is.common.Common.SamplingSettings.getDefaultInstance() : sampling_;
        }
      }
      /**
       * <code>.is.common.SamplingSettings sampling = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.common.Common.SamplingSettings, com.is.common.Common.SamplingSettings.Builder, com.is.common.Common.SamplingSettingsOrBuilder> 
          getSamplingFieldBuilder() {
        if (samplingBuilder_ == null) {
          samplingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.common.Common.SamplingSettings, com.is.common.Common.SamplingSettings.Builder, com.is.common.Common.SamplingSettingsOrBuilder>(
                  getSampling(),
                  getParentForChildren(),
                  isClean());
          sampling_ = null;
        }
        return samplingBuilder_;
      }

      private com.is.vision.ImageOuterClass.ImageSettings image_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.ImageOuterClass.ImageSettings, com.is.vision.ImageOuterClass.ImageSettings.Builder, com.is.vision.ImageOuterClass.ImageSettingsOrBuilder> imageBuilder_;
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public boolean hasImage() {
        return imageBuilder_ != null || image_ != null;
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public com.is.vision.ImageOuterClass.ImageSettings getImage() {
        if (imageBuilder_ == null) {
          return image_ == null ? com.is.vision.ImageOuterClass.ImageSettings.getDefaultInstance() : image_;
        } else {
          return imageBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public Builder setImage(com.is.vision.ImageOuterClass.ImageSettings value) {
        if (imageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          image_ = value;
          onChanged();
        } else {
          imageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public Builder setImage(
          com.is.vision.ImageOuterClass.ImageSettings.Builder builderForValue) {
        if (imageBuilder_ == null) {
          image_ = builderForValue.build();
          onChanged();
        } else {
          imageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public Builder mergeImage(com.is.vision.ImageOuterClass.ImageSettings value) {
        if (imageBuilder_ == null) {
          if (image_ != null) {
            image_ =
              com.is.vision.ImageOuterClass.ImageSettings.newBuilder(image_).mergeFrom(value).buildPartial();
          } else {
            image_ = value;
          }
          onChanged();
        } else {
          imageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public Builder clearImage() {
        if (imageBuilder_ == null) {
          image_ = null;
          onChanged();
        } else {
          image_ = null;
          imageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public com.is.vision.ImageOuterClass.ImageSettings.Builder getImageBuilder() {
        
        onChanged();
        return getImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      public com.is.vision.ImageOuterClass.ImageSettingsOrBuilder getImageOrBuilder() {
        if (imageBuilder_ != null) {
          return imageBuilder_.getMessageOrBuilder();
        } else {
          return image_ == null ?
              com.is.vision.ImageOuterClass.ImageSettings.getDefaultInstance() : image_;
        }
      }
      /**
       * <code>.is.vision.ImageSettings image = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.ImageOuterClass.ImageSettings, com.is.vision.ImageOuterClass.ImageSettings.Builder, com.is.vision.ImageOuterClass.ImageSettingsOrBuilder> 
          getImageFieldBuilder() {
        if (imageBuilder_ == null) {
          imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.ImageOuterClass.ImageSettings, com.is.vision.ImageOuterClass.ImageSettings.Builder, com.is.vision.ImageOuterClass.ImageSettingsOrBuilder>(
                  getImage(),
                  getParentForChildren(),
                  isClean());
          image_ = null;
        }
        return imageBuilder_;
      }

      private com.is.vision.Camera.CameraSettings camera_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSettings, com.is.vision.Camera.CameraSettings.Builder, com.is.vision.Camera.CameraSettingsOrBuilder> cameraBuilder_;
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public boolean hasCamera() {
        return cameraBuilder_ != null || camera_ != null;
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public com.is.vision.Camera.CameraSettings getCamera() {
        if (cameraBuilder_ == null) {
          return camera_ == null ? com.is.vision.Camera.CameraSettings.getDefaultInstance() : camera_;
        } else {
          return cameraBuilder_.getMessage();
        }
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public Builder setCamera(com.is.vision.Camera.CameraSettings value) {
        if (cameraBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          camera_ = value;
          onChanged();
        } else {
          cameraBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public Builder setCamera(
          com.is.vision.Camera.CameraSettings.Builder builderForValue) {
        if (cameraBuilder_ == null) {
          camera_ = builderForValue.build();
          onChanged();
        } else {
          cameraBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public Builder mergeCamera(com.is.vision.Camera.CameraSettings value) {
        if (cameraBuilder_ == null) {
          if (camera_ != null) {
            camera_ =
              com.is.vision.Camera.CameraSettings.newBuilder(camera_).mergeFrom(value).buildPartial();
          } else {
            camera_ = value;
          }
          onChanged();
        } else {
          cameraBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public Builder clearCamera() {
        if (cameraBuilder_ == null) {
          camera_ = null;
          onChanged();
        } else {
          camera_ = null;
          cameraBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public com.is.vision.Camera.CameraSettings.Builder getCameraBuilder() {
        
        onChanged();
        return getCameraFieldBuilder().getBuilder();
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      public com.is.vision.Camera.CameraSettingsOrBuilder getCameraOrBuilder() {
        if (cameraBuilder_ != null) {
          return cameraBuilder_.getMessageOrBuilder();
        } else {
          return camera_ == null ?
              com.is.vision.Camera.CameraSettings.getDefaultInstance() : camera_;
        }
      }
      /**
       * <code>.is.vision.CameraSettings camera = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.is.vision.Camera.CameraSettings, com.is.vision.Camera.CameraSettings.Builder, com.is.vision.Camera.CameraSettingsOrBuilder> 
          getCameraFieldBuilder() {
        if (cameraBuilder_ == null) {
          cameraBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.is.vision.Camera.CameraSettings, com.is.vision.Camera.CameraSettings.Builder, com.is.vision.Camera.CameraSettingsOrBuilder>(
                  getCamera(),
                  getParentForChildren(),
                  isClean());
          camera_ = null;
        }
        return cameraBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:is.vision.CameraConfig)
    }

    // @@protoc_insertion_point(class_scope:is.vision.CameraConfig)
    private static final com.is.vision.Camera.CameraConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.is.vision.Camera.CameraConfig();
    }

    public static com.is.vision.Camera.CameraConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraConfig>
        PARSER = new com.google.protobuf.AbstractParser<CameraConfig>() {
      public CameraConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraConfig> getParserForType() {
      return PARSER;
    }

    public com.is.vision.Camera.CameraConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraCalibrationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:is.vision.CameraCalibration)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * camera field of view in world
   * </pre>
   *
   * Protobuf type {@code is.vision.CameraCalibration}
   */
  public  static final class CameraCalibration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:is.vision.CameraCalibration)
      CameraCalibrationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraCalibration.newBuilder() to construct.
    private CameraCalibration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraCalibration() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraCalibration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.is.vision.Camera.internal_static_is_vision_CameraCalibration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.is.vision.Camera.internal_static_is_vision_CameraCalibration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.is.vision.Camera.CameraCalibration.class, com.is.vision.Camera.CameraCalibration.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.is.vision.Camera.CameraCalibration)) {
        return super.equals(obj);
      }
      com.is.vision.Camera.CameraCalibration other = (com.is.vision.Camera.CameraCalibration) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.is.vision.Camera.CameraCalibration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraCalibration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraCalibration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.is.vision.Camera.CameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.is.vision.Camera.CameraCalibration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * camera field of view in world
     * </pre>
     *
     * Protobuf type {@code is.vision.CameraCalibration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:is.vision.CameraCalibration)
        com.is.vision.Camera.CameraCalibrationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.is.vision.Camera.internal_static_is_vision_CameraCalibration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.is.vision.Camera.internal_static_is_vision_CameraCalibration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.is.vision.Camera.CameraCalibration.class, com.is.vision.Camera.CameraCalibration.Builder.class);
      }

      // Construct using com.is.vision.Camera.CameraCalibration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.is.vision.Camera.internal_static_is_vision_CameraCalibration_descriptor;
      }

      public com.is.vision.Camera.CameraCalibration getDefaultInstanceForType() {
        return com.is.vision.Camera.CameraCalibration.getDefaultInstance();
      }

      public com.is.vision.Camera.CameraCalibration build() {
        com.is.vision.Camera.CameraCalibration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.is.vision.Camera.CameraCalibration buildPartial() {
        com.is.vision.Camera.CameraCalibration result = new com.is.vision.Camera.CameraCalibration(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.is.vision.Camera.CameraCalibration) {
          return mergeFrom((com.is.vision.Camera.CameraCalibration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.is.vision.Camera.CameraCalibration other) {
        if (other == com.is.vision.Camera.CameraCalibration.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.is.vision.Camera.CameraCalibration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.is.vision.Camera.CameraCalibration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:is.vision.CameraCalibration)
    }

    // @@protoc_insertion_point(class_scope:is.vision.CameraCalibration)
    private static final com.is.vision.Camera.CameraCalibration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.is.vision.Camera.CameraCalibration();
    }

    public static com.is.vision.Camera.CameraCalibration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CameraCalibration>
        PARSER = new com.google.protobuf.AbstractParser<CameraCalibration>() {
      public CameraCalibration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraCalibration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraCalibration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraCalibration> getParserForType() {
      return PARSER;
    }

    public com.is.vision.Camera.CameraCalibration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_is_vision_CameraSetting_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_is_vision_CameraSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_is_vision_CameraSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_is_vision_CameraSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_is_vision_CameraConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_is_vision_CameraConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_is_vision_CameraCalibration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_is_vision_CameraCalibration_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014camera.proto\022\tis.vision\032\014common.proto\032" +
      "\013image.proto\032\033google/protobuf/empty.prot" +
      "o\"1\n\rCameraSetting\022\021\n\tautomatic\030\001 \001(\010\022\r\n" +
      "\005ratio\030\002 \001(\002\"\311\004\n\016CameraSettings\022,\n\nbrigh" +
      "tness\030\001 \001(\0132\030.is.vision.CameraSetting\022*\n" +
      "\010exposure\030\002 \001(\0132\030.is.vision.CameraSettin" +
      "g\022\'\n\005focus\030\003 \001(\0132\030.is.vision.CameraSetti" +
      "ng\022&\n\004gain\030\004 \001(\0132\030.is.vision.CameraSetti" +
      "ng\022\'\n\005gamma\030\005 \001(\0132\030.is.vision.CameraSett" +
      "ing\022%\n\003hue\030\006 \001(\0132\030.is.vision.CameraSetti",
      "ng\022&\n\004iris\030\007 \001(\0132\030.is.vision.CameraSetti" +
      "ng\022,\n\nsaturation\030\010 \001(\0132\030.is.vision.Camer" +
      "aSetting\022+\n\tsharpness\030\t \001(\0132\030.is.vision." +
      "CameraSetting\022)\n\007shutter\030\n \001(\0132\030.is.visi" +
      "on.CameraSetting\0222\n\020white_balance_bu\030\013 \001" +
      "(\0132\030.is.vision.CameraSetting\0222\n\020white_ba" +
      "lance_rv\030\014 \001(\0132\030.is.vision.CameraSetting" +
      "\022&\n\004zoom\030\r \001(\0132\030.is.vision.CameraSetting" +
      "\"\221\001\n\014CameraConfig\022-\n\010sampling\030\001 \001(\0132\033.is" +
      ".common.SamplingSettings\022\'\n\005image\030\002 \001(\0132",
      "\030.is.vision.ImageSettings\022)\n\006camera\030\003 \001(" +
      "\0132\031.is.vision.CameraSettings\"\023\n\021CameraCa" +
      "libration*]\n\022CameraConfigFields\022\007\n\003ALL\020\000" +
      "\022\025\n\021SAMPLING_SETTINGS\020\001\022\022\n\016IMAGE_SETTING" +
      "S\020\002\022\023\n\017CAMERA_SETTINGS\020\0032\234\001\n\rCameraGatew" +
      "ay\022E\n\020SetConfiguration\022\027.is.vision.Camer" +
      "aConfig\032\026.google.protobuf.Empty\"\000\022D\n\rCon" +
      "figuration\022\030.is.common.FieldSelector\032\027.i" +
      "s.vision.CameraConfig\"\000B\017\n\rcom.is.vision" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.is.common.Common.getDescriptor(),
          com.is.vision.ImageOuterClass.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        }, assigner);
    internal_static_is_vision_CameraSetting_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_is_vision_CameraSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_is_vision_CameraSetting_descriptor,
        new java.lang.String[] { "Automatic", "Ratio", });
    internal_static_is_vision_CameraSettings_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_is_vision_CameraSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_is_vision_CameraSettings_descriptor,
        new java.lang.String[] { "Brightness", "Exposure", "Focus", "Gain", "Gamma", "Hue", "Iris", "Saturation", "Sharpness", "Shutter", "WhiteBalanceBu", "WhiteBalanceRv", "Zoom", });
    internal_static_is_vision_CameraConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_is_vision_CameraConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_is_vision_CameraConfig_descriptor,
        new java.lang.String[] { "Sampling", "Image", "Camera", });
    internal_static_is_vision_CameraCalibration_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_is_vision_CameraCalibration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_is_vision_CameraCalibration_descriptor,
        new java.lang.String[] { });
    com.is.common.Common.getDescriptor();
    com.is.vision.ImageOuterClass.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
