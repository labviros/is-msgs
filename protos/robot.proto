syntax = "proto3";

option java_package = "com.is.robot";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "common.proto";

package is.robot;

service RobotGateway {
  //rpc GetConfig(is.common.FieldSelector) returns (RobotConfig) {}
  rpc SetConfig(RobotConfig) returns (google.protobuf.Empty) {}
}

service RobotController {
  rpc SetTask(RobotTask) returns (google.protobuf.Empty) {}
}

message Position {
  float x = 1;
  float y = 2;
  float z = 3;
}

// Euler Angles Orientation, Rotation Matrix = Rz(row) * Ry(pitch) * Rx(yaw)
message Orientation {
  float yaw = 1;   // rotation around x
  float pitch = 2; // rotation around y
  float roll = 3;  // rotation around z
}

message Pose {
  Position position = 1;
  Orientation orientation = 2;
}

message Speed {
  float linear = 1;
  float angular = 2;
}

message RobotConfig {
  Speed speed = 1;
}

message FinalPoseTask {
  Pose goal = 1;
}

message PathTask {
  repeated Position positions = 1;
}

message TrajectoryTask {
  repeated Position positions = 1;
  repeated Speed speeds = 2;
}

message RobotTask {
  oneof Task {
    FinalPoseTask pose = 1;
    PathTask path = 2;
    TrajectoryTask trajectory = 3;
  }
  // Ratio indicating the allowed error in the positioning algorithm
  float allowed_error = 14;
  is.common.SamplingSettings sampling = 15;
}

message RobotControllerProgress {
  Speed current_speed = 1;
  Pose current_pose = 2;
  Pose desired_pose = 3;
  float error = 4;
  bool done = 5;
}